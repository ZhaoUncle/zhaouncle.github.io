[{"categories":["Thoughts","人物自传"],"content":"一个人的气质里，藏着她读过的书","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/%E6%9E%97%E5%BE%BD%E5%9B%A0/","tags":["林徽因"],"title":"林徽因","uri":"https://www.zhaouncle.com/2020/06/%E6%9E%97%E5%BE%BD%E5%9B%A0/"},{"categories":["Thoughts","人物自传"],"content":" 一身诗意千寻爆，万古人间四月天 大姒嗣徽音，则百斯男。出自《诗·大雅·思齐》 林清玄说：“一个人的气质里，藏着她读过的书” 可谓腹有诗书气自华之奇女子典范也 ","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/%E6%9E%97%E5%BE%BD%E5%9B%A0/:0:0","tags":["林徽因"],"title":"林徽因","uri":"https://www.zhaouncle.com/2020/06/%E6%9E%97%E5%BE%BD%E5%9B%A0/"},{"categories":["hugo"],"content":"hugo 使用 LoveIt 主题搭建个人博客","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/hugo_01/","tags":["hugo","博客"],"title":"Hugo（二）algolia 博客搜索及自动化处理脚本","uri":"https://www.zhaouncle.com/2020/06/hugo_01/"},{"categories":["hugo"],"content":"使用一些简单的 shell 脚本处理自己的 hugo 博客和搜索 ","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/hugo_01/:0:0","tags":["hugo","博客"],"title":"Hugo（二）algolia 博客搜索及自动化处理脚本","uri":"https://www.zhaouncle.com/2020/06/hugo_01/"},{"categories":["hugo"],"content":"1 config.toml 配置 ","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/hugo_01/:1:0","tags":["hugo","博客"],"title":"Hugo（二）algolia 博客搜索及自动化处理脚本","uri":"https://www.zhaouncle.com/2020/06/hugo_01/"},{"categories":["hugo"],"content":"1.1 首先我们配置好 config.toml 的 algolia 的配置 # 搜索配置 [languages.zh-cn.params.search] enable = true # 搜索引擎的类型 (\"lunr\", \"algolia\") type = \"algolia\" # 文章内容最长索引长度 contentLength = 4000 # 搜索框的占位提示语 placeholder = \"搜索\" # 最大结果数目 maxResultLength = 10 # 结果内容片段长度 snippetLength = 50 # 搜索结果中高亮部分的 HTML 标签 highlightTag = \"em\" # 是否在搜索索引中使用基于 baseURL 的绝对路径 absoluteURL = true [languages.zh-cn.params.search.algolia] index = \"index.zh-cn\" #algolia 里面的 index 名称相对应，如果你有多语言版本，那么就需要创建多个语言的 index，我这里仅举例中文的版本 appID = \"\" searchKey = \"\" ","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/hugo_01/:1:1","tags":["hugo","博客"],"title":"Hugo（二）algolia 博客搜索及自动化处理脚本","uri":"https://www.zhaouncle.com/2020/06/hugo_01/"},{"categories":["hugo"],"content":"2 Algolia 配置 ","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/hugo_01/:2:0","tags":["hugo","博客"],"title":"Hugo（二）algolia 博客搜索及自动化处理脚本","uri":"https://www.zhaouncle.com/2020/06/hugo_01/"},{"categories":["hugo"],"content":"2.1 登录 Algolia 官网 ，注册账号，创建 Application 名为 “test01”作为举例，默认选择 “FREE” 即可，这里自定义名称 ","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/hugo_01/:2:1","tags":["hugo","博客"],"title":"Hugo（二）algolia 博客搜索及自动化处理脚本","uri":"https://www.zhaouncle.com/2020/06/hugo_01/"},{"categories":["hugo"],"content":"2.2 我这里选择香港作为存储地区 ","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/hugo_01/:2:2","tags":["hugo","博客"],"title":"Hugo（二）algolia 博客搜索及自动化处理脚本","uri":"https://www.zhaouncle.com/2020/06/hugo_01/"},{"categories":["hugo"],"content":"2.3 创建index，要与config.toml 的配置 index 一样 ","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/hugo_01/:2:3","tags":["hugo","博客"],"title":"Hugo（二）algolia 博客搜索及自动化处理脚本","uri":"https://www.zhaouncle.com/2020/06/hugo_01/"},{"categories":["hugo"],"content":"2.4 将 API Keys 里面补充到 config.toml 里面 ","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/hugo_01/:2:4","tags":["hugo","博客"],"title":"Hugo（二）algolia 博客搜索及自动化处理脚本","uri":"https://www.zhaouncle.com/2020/06/hugo_01/"},{"categories":["hugo"],"content":"3 使用 atomic-algolia 来完成自动更新索引 ","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/hugo_01/:3:0","tags":["hugo","博客"],"title":"Hugo（二）algolia 博客搜索及自动化处理脚本","uri":"https://www.zhaouncle.com/2020/06/hugo_01/"},{"categories":["hugo"],"content":"3.1 首先安装 npm，这里不介绍 ","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/hugo_01/:3:1","tags":["hugo","博客"],"title":"Hugo（二）algolia 博客搜索及自动化处理脚本","uri":"https://www.zhaouncle.com/2020/06/hugo_01/"},{"categories":["hugo"],"content":"3.2 安装 atomic-algolia npm -g install atomic-algolia ","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/hugo_01/:3:2","tags":["hugo","博客"],"title":"Hugo（二）algolia 博客搜索及自动化处理脚本","uri":"https://www.zhaouncle.com/2020/06/hugo_01/"},{"categories":["hugo"],"content":"3.3 创建 .env 文件存放 algolia 配置 注意：只有执行hugo 生成静态文件，才会在 public 目录生成index.json 索引。 ALGOLIA_APP_ID=\"8GC6CRN3M8\" ALGOLIA_ADMIN_KEY=\"d4467e8c57c2b12f53da9c8ec1c629be\" ALGOLIA_INDEX_NAME=\"index.zh-cn\" ALGOLIA_INDEX_FILE=\"public/index.json\" ","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/hugo_01/:3:3","tags":["hugo","博客"],"title":"Hugo（二）algolia 博客搜索及自动化处理脚本","uri":"https://www.zhaouncle.com/2020/06/hugo_01/"},{"categories":["hugo"],"content":"3.4 创建 push_algolia_json.js 脚本 var atomicalgolia = require(\"atomic-algolia\") var indexName = process.env.ALGOLIA_INDEX_NAME var indexPath = process.env.ALGOLIA_INDEX_FILE var cb = function(error, result) { if (error) throw error console.log(result) } atomicalgolia(indexName, indexPath, cb) ","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/hugo_01/:3:4","tags":["hugo","博客"],"title":"Hugo（二）algolia 博客搜索及自动化处理脚本","uri":"https://www.zhaouncle.com/2020/06/hugo_01/"},{"categories":["hugo"],"content":"3.5 手动执行将索引到 algolia source .env node push_algolia_json.js ","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/hugo_01/:3:5","tags":["hugo","博客"],"title":"Hugo（二）algolia 博客搜索及自动化处理脚本","uri":"https://www.zhaouncle.com/2020/06/hugo_01/"},{"categories":["hugo"],"content":"4 定制化脚本 ","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/hugo_01/:4:0","tags":["hugo","博客"],"title":"Hugo（二）algolia 博客搜索及自动化处理脚本","uri":"https://www.zhaouncle.com/2020/06/hugo_01/"},{"categories":["hugo"],"content":"4.1 统一脚本deploy.sh，配合Hugo（一）Github Pages 搭建个人博客 #!/bin/sh # If a command fails then the deploy stops set -e start_local_hugo_server(){ hugo server --disableFastRender } update_algolia(){ cd ../ type=`cat config.toml|grep -A 5 \"languages.zh-cn.params.search\"|grep type|awk -F'\"' '{print $2}'` if [ \"$type\" == \"algolia\" ];then source .env node push_algolia_json.js printf \"\\033[0;32m已经更新到 algolia ！！！\\033[0m\\n\" fi } pushMyBlogHugo(){ printf \"\\033[0;32mDeploying updates to GitHub \"https://github.com/ZhaoUncle/MyBlogHugo\"\\033[0m\\n\" git pull # Add changes to git. git add . # Commit changes. msg=\"change MyBlogHugo site $(date)\" if [ \"$#\" -gt 1 ]; then msg=\"$2\" fi git commit -m \"$msg\" # Push source and build repos. git push origin master } push_zhaouncle(){ printf \"\\033[0;32mDeploying updates to GitHub \"https://github.com/ZhaoUncle/zhaouncle.github.io\"\\033[0m\\n\" # Build the project. hugo # if using a theme, replace with `hugo -t \u003cYOURTHEME\u003e` # Go To Public folder cd public git pull # Add changes to git. git add . # Commit changes. msg=\"rebuilding site $(date)\" if [ \"$#\" -gt 1 ]; then msg=\"$2\" fi git commit -m \"$msg\" # Push source and build repos. git push origin master update_algolia } case $1 in 1) start_local_hugo_server ;; 2) pushMyBlogHugo $* ;; 3) push_zhaouncle $* ;; 4) hugo serve -e production ;; 5) hugo server --source=themes/LoveIt/exampleSite ;; esac 脚本解析： sh deploy.sh 1：启动 hugo 作为本地调试使用，实时将文章的内容更新到站点，不需要重启也能边修改边观看效果。 sh deploy.sh 2：将 MyHugoBlog 上传到 Github 存储库。 sh deploy.sh 3：将 public 静态文件站点上传到Github Pages 存储库，并更新 algolia 的索引。 sh deploy.sh 4：主要是用来调试 cdn，评论系统等，所以要用 production 变量来启动。 sh deploy.sh 5：查看官方例子，方便调试。 ","date":"2020-06-27","objectID":"https://www.zhaouncle.com/2020/06/hugo_01/:4:1","tags":["hugo","博客"],"title":"Hugo（二）algolia 博客搜索及自动化处理脚本","uri":"https://www.zhaouncle.com/2020/06/hugo_01/"},{"categories":["Thoughts","随笔"],"content":"2020 年端午节有想","date":"2020-06-26","objectID":"https://www.zhaouncle.com/2020/06/20200626/","tags":["无言"],"title":"于 2020 年 6 月 26 日","uri":"https://www.zhaouncle.com/2020/06/20200626/"},{"categories":["Thoughts","随笔"],"content":"2020 年端午节有想 就像北岛写道：“那时，我们有梦，关于文学，关于爱情，关于理想，关于穿越世界的旅行。如今我们深夜饮酒，杯子碰到一起，都是梦破碎的声音。” ​ 偶然间看到这么一句话，翘起了二郎腿，挠挠不怎么聪明的脑袋，总感觉得来一瓶啤酒才能消愁，如果不能，可能需要两瓶。鉴于自己不会喝酒，想想只能放弃这种不是很成熟确实成年人最常用的手段，于是写起了 blog。 ​ 昨天是端午节，也是放假的第一天，很神奇的起床去爬山，深圳的铁仔山公园，这是第二次，上午 9 点钟这个不算早不算晚的时间点，骑着 ofo 过去就已经开始流了满头大汗。 😌，千篇一律的皮囊下面的厚重脂肪开始了无声的反抗。 ​ 生活的千篇一律，工作的两点一线，可能已经麻木了大多数人的神经，都是为了活着而生活。拨开那一层层的浮华，褪去了虚荣的外表，便只剩下一个孤独的灵魂了吧，也或许是纯净的也说不定，不过始终不可能如孩童刚降临人间般纯粹了。俗世的大染缸终究是左一撇右一撇的挥斥方遒，将纯净的纸张，书写着自己一生的故事，一副含有插画的自传。也不知是否有水墨画如清明上河图那样的巨作诞生，起码过了 26 了，我还是没看见这样的兆头。当然，偶尔做做梦还是可以有的。 ​ 在山顶上找了个无人的阶梯躺下，闭上双眼，除了一身湿透的戎装在树荫下，渐渐被清风逐凉，难得一丝清净。 ","date":"2020-06-26","objectID":"https://www.zhaouncle.com/2020/06/20200626/:0:0","tags":["无言"],"title":"于 2020 年 6 月 26 日","uri":"https://www.zhaouncle.com/2020/06/20200626/"},{"categories":["elk"],"content":"centos7 安装 ELK 7.6.2","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"1. 初始化环境 ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:0:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"1.0 初始化环境官网参考 https://www.elastic.co/guide/en/elasticsearch/reference/current/system-config.html ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:1:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"1.1 架构 主机 ip hostname 安装的服务 192.168.110.245 node01 es、kibana 192.168.110.246 node02 es、logstash、filebeat、auditbeat 192.168.110.247 node03 es、filebeat、auditbeat ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:2:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"1.2 配置 hosts cat \u003c\u003c EOF \u003e\u003e /etc/hosts 192.168.110.245 node01 192.168.110.246 node02 192.168.110.247 node03 EOF ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:3:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"1.3 修改 hostname hostnamectl set-hostname node01 hostnamectl set-hostname node02 hostnamectl set-hostname node03 ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:4:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"1.4 时间同步(联网状态) yum -y install ntpdate /bin/echo \"* */1 * * * /usr/sbin/ntpdate pool.ntp.org \u003e /dev/null 2\u003e\u00261\" \u003e\u003e /var/spool/cron/root ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:5:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"1.5 关闭 selinux setenforce 0 #临时，马上生效 sed -i 's/enforcing/disabled/' /etc/selinux/config #永久，重启生效 ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:6:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"1.6 关闭防火墙 iptables -F systemctl stop firewalld systemctl disable firewalld ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:7:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"1.7 内存解锁和文件限制 #临时修改，重启失效 ulimit -n 65535 #永久修改，重启生效 cat \u003c\u003c EOF \u003e\u003e/etc/security/limits.conf elasticsearch soft memlock unlimited elasticsearch hard memlock unlimited * soft nofile 65535 * hard nofile 65535 EOF ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:8:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"1.8 关闭 swap 缓存 swapoff -a #临时 sed -i '/swap/s/^/#/' /etc/fstab #永久 ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:9:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"1.9 设置 es 用户内存限制大小 sysctl -w vm.max_map_count=262144 echo 'vm.max_map_count=262144' \u003e\u003e /etc/sysctl.conf ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:10:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"1.10 不能 root 用户启动 ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:11:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"1.11 java版本 es 7.*之后的版本不需要安装环境 java，默认自带 jdk 环境，但是其他的服务还是需要 jdk 环境的，所以还是要统一安装，另外 jdk 版本要为 8 或者 11，我这里默认 8 就好了，直接 yum 安装 yum -y install java-1.8.0-openjdk java-1.8.0-openjdk-devel 2. 安装 es 集群 ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:12:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"2.1 官网下载 wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.6.2-x86_64.rpm wget https://artifacts.elastic.co/downloads/kibana/kibana-7.6.2-x86_64.rpm wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.6.2-x86_64.rpm wget https://artifacts.elastic.co/downloads/logstash/logstash-7.6.2.rpm wget https://artifacts.elastic.co/downloads/beats/auditbeat/auditbeat-7.6.2-x86_64.rpm ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:13:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"2.2 yum 直接安装则可 yum -y install elasticsearch yum -y install kibana yum -y install filebeat yum -y install auditbeat ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:14:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"2.3 es 配置修改，3 台机都要，其中 node.name 配置不同，其他一样 cd /etc/elasticsearch/ \u0026\u0026 cp elasticsearch.yml elasticsearch.yml.orig cat \u003c\u003c EOF \u003e elasticsearch.yml cluster.name: es-cluster node.name: node01 path.data: /var/lib/elasticsearch path.logs: /var/log/elasticsearch bootstrap.memory_lock: true network.host: 0.0.0.0 http.port: 9200 discovery.seed_hosts: [\"192.168.110.245\", \"192.168.110.246\", \"192.168.110.247\"] cluster.initial_master_nodes: [\"node01\"] xpack.security.enabled: true xpack.security.transport.ssl.enabled: true xpack.security.transport.ssl.verification_mode: certificate xpack.security.transport.ssl.keystore.path: elastic-certificates.p12 xpack.security.transport.ssl.truststore.path: elastic-certificates.p12 xpack.security.audit.enabled: true xpack.security.audit.logfile.events.emit_request_body: true EOF #node02: sed -i 's#node\\.name\\:\\ node01#node.name: node02#' /etc/elasticsearch/elasticsearch.yml #node03: sed -i 's#node\\.name\\:\\ node01#node.name: node03#' /etc/elasticsearch/elasticsearch.yml 解释说明： cluster.name 集群名字，同一个集群中使用相同名字，单机就随意 node.name: es-cluster 节点名字，每台机都不一样 bootstrap.memory_lock: true 将进程地址所在 RAM 空间中，以防止 es 内存被换出，交换对性能，节点稳定性非常不利，应不惜一切代价避免交换。它可能导致垃圾收集持续数分钟而不是毫秒，并且可能导致节点响应缓慢甚至断开与群集的连接。在弹性分布式系统中，让操作系统杀死该节点更为有效。 1、如果你的机器已经全局进制swap，那么不开启这个配置也无所谓。详情查看 1.8 配置 2、或者配置了/etc/sysctl.conf 的 vm.swappiness = 1 ，所以也不需要配置 true 3、如果以上两个你都没做，那你还是乖乖把 true 配置上。我这里都做了，也不影响。 network.host: 0.0.0.0 需要外网 ip 可以这么配置，不然配置内网也行 http.port: 9200 端口号，不配置的话默认9200 discovery.seed_hosts: [\"192.168.110.245\", \"192.168.110.246\", \"192.168.110.247\"] 这里可以不指定，不过避免 es 回环查找，直接指定方便 cluster.initial_master_nodes: [\"node-1\"] 首次启动 es 集群指定 master 机器，之后重启和添加新服务器都无需更改 xpack.security.enabled: true 启用 xpack 安全模块 xpack.security.transport.ssl.enabled: true TLS 功能，可对通信进行加密 ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:15:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"2.4 如果是 yum 安装的方式需要修改es的启动文件 参考地址 cat /usr/lib/systemd/system/elasticsearch.service [Service] LimitMEMLOCK=infinity 修改命令： sed -i '/\\[Service\\]/a\\LimitMEMLOCK=infinity' /usr/lib/systemd/system/elasticsearch.service 修改完之后要reload 一下 sudo systemctl daemon-reload ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:16:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"2.5 如果你要设置 es 的内存大小，有两个地方 1、jvm.options cat /etc/elasticsearch/jvm.options -Xms512m -Xmx512m 2、这里不做介绍，以上一种为常用方法，如果你设置的 java PATH 有问题，可以在这里面指定 java 环境。 /etc/sysconfig/elasticsearch ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:17:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"2.6 在 node01 配置证书，我这里设置的空密码，直接回车便可。 /usr/share/elasticsearch/bin/elasticsearch-certutil ca /usr/share/elasticsearch/bin/elasticsearch-certutil cert --ca elastic-stack-ca.p12 cp /usr/share/elasticsearch/{elastic-stack-ca.p12,elastic-certificates.p12} /etc/elasticsearch/ chmod 640 /etc/elasticsearch/elastic-certificates.p12 #scp /etc/elasticsearch/elastic-certificates.p12 root@node02:/etc/elasticsearch/ #scp /etc/elasticsearch/elastic-certificates.p12 root@node03:/etc/elasticsearch/ 生成CA证书 bin/elasticsearch-certutil ca，将产生新文件 elastic-stack-ca.p12。该 elasticsearch-certutil 命令还会提示你输入密码以保护文件和密钥，请保留该文件的副本并记住其密码。 为集群中的每个节点生成证书和私钥 bin/elasticsearch-certutil cert --ca elastic-stack-ca.p12，将产生新文件 elastic-certificates.p12。系统还会提示你输入密码，你可以输入证书和密钥的密码，也可以按Enter键将密码留空。默认情况下 elasticsearch-certutil 生成没有主机名信息的证书，这意味着你可以将证书用于集群中的每个节点，另外要关闭主机名验证。 注意：如果你在创建证书时输入了密码，那可以通过下面的方法设置。 /usr/share/elasticsearch/bin/elasticsearch-keystore add xpack.security.transport.ssl.keystore.secure_password /usr/share/elasticsearch/bin/elasticsearch-keystore add xpack.security.transport.ssl.truststore.secure_password ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:18:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"2.7 node01启动 es systemctl start elasticsearch systemctl enable elasticsearch systemctl status elasticsearch ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:19:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"2.8 node01，配置账号密码完成tls通信 命令： /usr/share/elasticsearch/bin/elasticsearch-setup-passwords interactive 结果： [root@node01 elasticsearch]# /usr/share/elasticsearch/bin/elasticsearch-setup-passwords interactive Initiating the setup of passwords for reserved users elastic,apm_system,kibana,logstash_system,beats_system,remote_monitoring_user. You will be prompted to enter passwords as the process progresses. Please confirm that you would like to continue [y/N]y Enter password for [elastic]: Reenter password for [elastic]: Passwords do not match. Try again. Enter password for [elastic]: Reenter password for [elastic]: Enter password for [apm_system]: Reenter password for [apm_system]: Enter password for [kibana]: Reenter password for [kibana]: Enter password for [logstash_system]: Reenter password for [logstash_system]: Enter password for [beats_system]: Reenter password for [beats_system]: Enter password for [remote_monitoring_user]: Reenter password for [remote_monitoring_user]: Changed password for user [apm_system] Changed password for user [kibana] Changed password for user [logstash_system] Changed password for user [beats_system] Changed password for user [remote_monitoring_user] Changed password for user [elastic] 检查：检查 node01是否启动并且密码访问正常 [root@node01 elasticsearch]# curl http://192.168.110.245:9200/_cat/nodes?v -u elastic:123456 ip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name 192.168.110.245 12 90 3 0.07 0.08 0.08 dilm * node01 注意的问题： 证书权限没设置，创建好默认为 600，手动修改为 640 启动报错相关： org.elasticsearch.ElasticsearchSecurityException: failed to load SSL configuration [xpack.security.transport.ssl] Caused by: org.elasticsearch.ElasticsearchException: failed to initialize SSL TrustManager - not permitted to read truststore file [/etc/elasticsearch/elastic-certificates.p12] Caused by: java.nio.file.AccessDeniedException: /etc/elasticsearch/elastic-certificates.p12 权限查看及修改 [root@node01 elasticsearch]# ll /etc/elasticsearch/elastic-certificates.p12 -rw------- 1 640 elasticsearch 3451 Apr 16 18:57 elastic-certificates.p12 [root@node01 elasticsearch]# chmod 640 /etc/elasticsearch/elastic-certificates.p12 ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:20:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"2.9 将 node01 的证书 scp 到 02 和 03，并启动 02 和 03的 es 这里有三个证书 elasticsearch.keystore：这里存放的是 elastic和 123456 的账号密码，给 es 集群使用，默认读取 elastic-stack-ca.p12：这个是 ca 初始证书，保存好就行，生成完 cert 之后用处不大 elastic-certificates.p12：这个是 cert 验证证书，es 集群就是通过这个证书完成 scp /etc/elasticsearch/{elasticsearch.keystore,elastic-stack-ca.p12,elastic-certificates.p12} root@node02:/etc/elasticsearch/ scp /etc/elasticsearch/{elasticsearch.keystore,elastic-stack-ca.p12,elastic-certificates.p12} root@node03:/etc/elasticsearch/ systemctl start elasticsearch systemctl enable elasticsearch systemctl status elasticsearch ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:21:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"2.10 基于 api 的检查，集群是否搭建成功。 #查看集群健康状态 curl http://192.168.110.245:9200/_cat/health?v -u elastic:123456 #查看集群节点 curl http://192.168.110.245:9200/_cat/nodes?v -u elastic:123456 可以发现 es 集群 ok 了！我们可以发现 node01 的 master 字段值为*，没错，它就是 master 节点了。 [root@node01 elasticsearch]# curl http://192.168.110.245:9200/_cat/health?v -u elastic:123456 epoch timestamp cluster status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent 1591345666 08:27:46 es-cluster green 3 3 2 1 0 0 0 0 - 100.0% [root@node01 elasticsearch]# curl http://192.168.110.245:9200/_cat/nodes?v -u elastic:123456 ip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name 192.168.110.245 20 91 0 0.00 0.01 0.05 dilm * node01 192.168.110.246 21 78 63 0.42 0.14 0.08 dilm - node02 192.168.110.247 29 76 13 0.89 0.29 0.13 dilm - node03 3. 安装 es 的 web UI ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:22:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"3.0 有哪些 web ui ElasticHD 我喜欢用这个，因为临时使用可以直接./ElasticHD 启动，方便快捷。 有 sql 转 json 的小工具，很好用 https://github.com/360EntSecGroup-Skylar/ElasticHD/ elasticsearch-HQ 要安装 python3.6 有 es 默认的接口查询，还有 node 节点的监控数据 https://github.com/ElasticHQ/elasticsearch-HQ/ dejavu 支持从 json 和 csv 导入导出数据 https://github.com/appbaseio/dejavu/ cerebro https://github.com/lmenezes/cerebro elasticsearch-head https://github.com/mobz/elasticsearch-head elasticsearch-browser 不支持 5.0 之后 https://github.com/OlegKunitsyn/elasticsearch-browser elasticsearch-kopf 支持 2.0之前 https://github.com/lmenezes/elasticsearch-kopf ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:23:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"3.1 如果带账号密码访问的话 url http://elastic:123456@192.168.110.245:9200 ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:24:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"3.2 安装web UI管理工具ElasticHD: 普通安装： （1）安装supervisord yum -y install supervisor echo_supervisord_conf \u003e supervisord.conf systemctl start supervisord systemctl enable supervisord （2）安装 elasticHD yum -y install xdg-utils cd /usr/local/src/ wget https://github.com/360EntSecGroup-Skylar/ElasticHD/releases/download/1.4/elasticHD_linux_amd64.zip unzip elasticHD_linux_amd64.zip chmod 0777 ElasticHD mv ElasticHD /usr/local/bin/ cat \u003c\u003cEOF\u003e /etc/supervisord.d/ElasticHD.ini [program:ElasticHD] command=/usr/local/bin/ElasticHD -p 0.0.0.0:9800 autostart=true autorestart=true user=elasticsearch redirect_stderr=true stdout_logfile=/tmp/ElasticHD.log EOF supervisorctl update supervisorctl reload supervisorctl status docker 安装： docker run -p 9800:9800 -d --link elasticsearch:demo containerize/elastichd web端访问结果：http://192.168.110.245:9800/ ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:25:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"3.3 安装 elasticsearch -HQ 普通安装： (1)安装python3.6 yum install python3 python3-pip python3-devel -y (2) 安装 elasticsearch-HQ cd /usr/local/src/ wget -O elasticsearch-HQ.zip https://github.com/ElasticHQ/elasticsearch-HQ/archive/master.zip unzip elasticsearch-HQ.zip mv elasticsearch-HQ-master /usr/local/elasticsearch-HQ cd /usr/local/elasticsearch-HQ pip3 install -r requirements.txt cat \u003c\u003cEOF\u003e /etc/supervisord.d/ElasticHQ.ini [program:ElasticHQ] command=/usr/bin/python3 /usr/local/elasticsearch-HQ/application.py --host 0.0.0.0 --port 5000 autostart=true autorestart=true #user=elasticsearch redirect_stderr=true stdout_logfile=/tmp/ElasticHQ.log EOF supervisorctl update supervisorctl reload supervisorctl status docker 安装 docker run -p 5000:5000 elastichq/elasticsearch-hq web端访问结果：http://192.168.110.245:5000/ 4. 安装 Kibana ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:26:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"4.1 引用： Kibana是一个针对Elasticsearch的开源分析及可视化平台，用来搜索、查看交互存储在Elasticsearch索引中的数据。使用Kibana，可以通过各种图表进行高级数据分析及展示。 Kibana让海量数据更容易理解。它操作简单，基于浏览器的用户界面可以快速创建仪表板（dashboard）实时显示Elasticsearch查询动态。 ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:27:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"4.2 安装： yum -y install kibana-7.6.2-x86_64.rpm #创建日志路径 mkdir /var/log/kibana touch /var/log/kibana/kibana.log chmod -R 755 /var/log/kibana/ chown -R kibana /var/log/kibana/ ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:28:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"4.3 修改配置文件 [root@node01 elk]# cat /etc/kibana/kibana.yml |grep -Ev '^#|^$' #kibana 端口号 server.port: 5601 #kibana 内网 ip server.host: \"192.168.110.245\" #es 的地址 elasticsearch.hosts: [\"http://192.168.110.245:9200\"] #es 的账号密码，在配置 tls 通信的时候那里就设置了的 elasticsearch.username: \"kibana\" elasticsearch.password: \"123456\" #记录发送到 es 的查询 elasticsearch.logQueries: true # 日志路径 logging.dest: /var/log/kibana/kibana.log # 禁止显示除错误消息以外的所有日志记录输出。 logging.quiet: true # 记录所有日志事件，包括系统使用情况信息和所有请求 logging.verbose: false # 开启 xpack xpack.security.enabled: true ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:29:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"4.4 启动 systemctl restart kibana systemctl status kibana ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:30:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"4.5 open kibana url http://192.168.110.245:5601/ ，这里要用 elastic 账号登录，使用 kibana 登录是无法，会报错 403 没权限 ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:31:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"4.6 内存限制 参考资料：https://www.elastic.co/guide/en/kibana/7.2/production.html#load-balancing-es 默认内存限制 1.4GB，如果过需要可以通过环境变量进行替换，一般不需要更改。 5. node02 安装 logstash ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:32:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"5.1 安装 logstash yum -y install logstash-7.6.2.rpm cp /etc/logstash/logstash.yml /etc/logstash/logstash.yml.orig ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:33:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"5.2 配置文件 [root@node02 elk]# cat /etc/logstash/logstash.yml|grep -Ev '#|^$' path.data: /var/lib/logstash # 配置自动加载配置，这样就无须在更改配置时手动重启 logstash 引起数据丢失 config.reload.automatic: true # 自动加载的时间 config.reload.interval: 10s path.logs: /var/log/logstash ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:34:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"5.3 修改内存地址 vim /etc/logstash/jvm.options -Xms1g -Xmx1g ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:35:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"5.4 手动测试，输入 hello cd /usr/share/logstash ./bin/logstash -e 'input { stdin { } } output { stdout { } }' hello 6. node02、03安装 filebeat ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:36:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"6.1 安装 yum -y install filebeat-7.6.2-x86_64.rpm cd /etc/filebeat cp filebeat.yml filebeat.yml.orig 7. 日志处理 ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:37:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"案例一：官方例子 ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:38:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"参考： https://www.elastic.co/guide/en/logstash/7.7/plugins-inputs-beats.html https://www.elastic.co/guide/en/logstash/current/advanced-pipeline.html ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:39:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"7.1.1在 node02 调整 logstash 配置 cd /etc/logstash/conf.d/ cat \u003c\u003cEOF\u003e /etc/logstash/conf.d/example.conf input { beats { port =\u003e 5044 } } output { elasticsearch { hosts =\u003e [\"http://192.168.110.245:9200\"] index =\u003e \"%{[@metadata][beat]}-%{[@metadata][version]}\" user =\u003e \"elastic\" password =\u003e \"123456\" } } EOF systemctl restart logstash ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:40:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"7.1.2检查端口是否启动： [root@node02 elk]# netstat -nltp|grep 5044 tcp6 0 0 :::5044 :::* LISTEN 31422/java ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:41:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"7.1.3 在 node02 配置 filebeat cd /root/src/elk wget https://download.elastic.co/demos/logstash/gettingstarted/logstash-tutorial.log.gz gzip -d logstash-tutorial.log.gz cat \u003c\u003cEOF\u003e filebeat.yml filebeat.inputs: - type: log paths: - /root/src/elk/logstash-tutorial.log output.logstash: hosts: [\"192.168.110.246:5044\"] EOF ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:42:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"7.1.4 启动 filebeat /usr/share/filebeat/bin/filebeat -e -c filebeat.yml -d \"publish\" 启动结果部分截图： ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:43:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["elk"],"content":"7.1.5 在 kibana 打开“Management”-»“Elasticsearch”-»“IndexManagement”，可以看到 filebeat 的索引 然后我们到 kiabana 那里添加 index 试试。 创建成功 最后我们到 Discover 这里就可以看到相关试图了 ","date":"2020-06-08","objectID":"https://www.zhaouncle.com/2020/06/elk_01/:44:0","tags":["elk","elasticsearch","kibana","logstash"],"title":"Centos7 安装 ELK 7.6.2","uri":"https://www.zhaouncle.com/2020/06/elk_01/"},{"categories":["hugo"],"content":"hugo 使用 LoveIt 主题搭建个人博客","date":"2020-06-05","objectID":"https://www.zhaouncle.com/2020/06/hugo/","tags":["hugo","博客"],"title":"Hugo（一）Github Pages 搭建个人博客","uri":"https://www.zhaouncle.com/2020/06/hugo/"},{"categories":["hugo"],"content":" 序言 Hugo 号称构建网站最快的框架，看过其他相关资料，hexo 在文章数量大的前提下，建站成静态文件的速度很慢，另外从主题（themes）这个角度去考虑，简单也是我的首选，于是从 hugo 下手自己的第一个博客网站。 安装 mac 安装 hugo brew install hugo 确认安装成功，可用命令行检查版本号进行测试 hugo version 其他平台可用直接下载二进制包进行使用，无需编译 https://github.com/gohugoio/hugo/releases 构建 hugo 项目 新建博客站点 hugo new site MyBlogHugo 创建完站点后的文件结构 MyBlogHugo ├── archetypes │ └── default.md ├── config.toml ├── content ├── data ├── layouts ├── static └── themes 添加 LoveIt 主题 Why choose it? 在 Hugo 主题市场 挑了半天，还是决定用 LoveIt 这个主题。 这个 themes 简单好看，功能齐全，作者也一直在努力更新，还支持多语言版本，包括 seo、搜索等功能都有，可以参考 demo 地址。 将主题作为子模块 cd MyBlogHugo git init git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt 启动 hugo server 启动 hugo 作为本地调试使用，在浏览器打开 http://localhost:1313/ 即可查看效果。 hugo server --disableFastRender 参数含义： disableFastRender：实时将文章的内容更新到站点，不需要重启也能边修改边观看效果。 生成静态文件，会在MyBlogHugo 下面生成 public 的静态文件目录 hugo 我是使用 LoveIt 主题自带的 exampleSite 的 config.toml 来进行修改和配置的。 cd MyBlogHugo cp themes/LoveIt/exampleSite/config.toml . 创建博客文章之前，我会使用example 的默认创建初始化详情来进行配置和修改. cp themes/LoveIt/archetypes/default.md archetypes/ # 这样，你每次创建文章的时候，都会使用这里的默认配置进行创建 hugo new posts/test01.md default.md 查看 \\--- title: \"{{ replace .TranslationBaseName \"-\" \" \" | title }}\" subtitle: \"\" date: {{ .Date }} lastmod: {{ .Date }} draft: false #是否作为草稿，如果为 true，不会生产静态文件到 public 目录 author: \"赵叔\" authorLink: \"\" description: \"\" tags: [] categories: [] hiddenFromHomePage: false hiddenFromSearch: false featuredImage: \"\" featuredImagePreview: \"\" toc: enable: true #是 否展开右边目录栏 math: enable: false lightgallery: false license: \"\" \\--- \u003c!--more--\u003e 配置 Github Pages 登录 github，在设置那里创建个人 repo 仓库，一共 2 个，一个是 .github.io 作为个人站点 public 的静态文件，一个是 MyBlogHugo 作为除了 public 这个静态目录的所有文件的仓库。记得创建空repo，不要添加 README 文件哦。 初始化仓库 MyBlogHugo，public 目录要忽略，不上传 cd MyBlogHugo echo \"!public/\" \u003e\u003e .gitignore git init git remote add origin git@github.com:ZhaoUncle/MyBlogHugo.git git add . git commit -m \"no public\" git pull --rebase origin master git push -u origin master 初始化仓库 zhaouncle.github.io cd public git init git remote add origin git@github.com:ZhaoUncle/zhaouncle.github.io.git git add . git commit -m \"my blog hugo\" git pull --rebase origin master git push -u origin master 之后就可以打开 http://\u003cusername\u003e.github.io 进入到你的博客了。 ","date":"2020-06-05","objectID":"https://www.zhaouncle.com/2020/06/hugo/:0:0","tags":["hugo","博客"],"title":"Hugo（一）Github Pages 搭建个人博客","uri":"https://www.zhaouncle.com/2020/06/hugo/"},{"categories":["Thoughts","随笔"],"content":"万事开头难 博客本来自 18 年始就有念头，一拖再拖，主要自己懒又不够专注，当然我也不会承认是我自己“无才”之无奈。 ","date":"2020-06-05","objectID":"https://www.zhaouncle.com/2020/06/%E4%B8%87%E4%BA%8B%E5%BC%80%E5%A4%B4%E9%9A%BE/:0:0","tags":["无言"],"title":"万事开头难","uri":"https://www.zhaouncle.com/2020/06/%E4%B8%87%E4%BA%8B%E5%BC%80%E5%A4%B4%E9%9A%BE/"},{"categories":["Thoughts","不尽如书"],"content":"闲来读之，不尽如书","date":"2020-06-02","objectID":"https://www.zhaouncle.com/2020/06/books/","tags":["阅读"],"title":"Books","uri":"https://www.zhaouncle.com/2020/06/books/"},{"categories":["Thoughts","不尽如书"],"content":"知行合一王阳明，by 度阴山，2020 年 4 月 张居正（全集），by 熊召政，2020 年 5 月 人人都是产品经理：写给产品新人，by苏杰，2020 年 6 月 ","date":"2020-06-02","objectID":"https://www.zhaouncle.com/2020/06/books/:0:0","tags":["阅读"],"title":"Books","uri":"https://www.zhaouncle.com/2020/06/books/"},{"categories":null,"content":"about me？ 博主非常懒，无颜之，也无以言之。 ","date":"0001-01-01","objectID":"https://www.zhaouncle.com/about/:0:0","tags":null,"title":"","uri":"https://www.zhaouncle.com/about/"},{"categories":null,"content":"一些常用的相关链接 loveit Doc：有关 loveit 的相关文档介绍 LoveIt Github Algolia：用于网站搜索 atomic-algolia：自动更新 index.json ","date":"0001-01-01","objectID":"https://www.zhaouncle.com/link/:0:0","tags":null,"title":"","uri":"https://www.zhaouncle.com/link/"}]